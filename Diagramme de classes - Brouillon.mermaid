erDiagram
    FLIGHT {
        Long flightId PK
        String flightNumber
        DateTime departureTime
        DateTime arrivalTime
        Long aircraftId FK
        String departureAirportCode FK
        String arrivalAirportCode FK
    }
    AIRCRAFT {
        Long aircraftId PK
        String tailNumber
        String model
        int capacity
    }
    FLIGHT }|--|| AIRCRAFT : operated_by

    TARIF {
        Long tarifId PK
        Date date
        Decimal price
        Long flightId FK
        String currencyCode FK
    }
    FLIGHT ||--o{ TARIF : has
    CURRENCY {
        String code PK
        String name
    }
    CURRENCY ||--o{ TARIF : uses

    SEAT_INVENTORY {
        Long seatInventoryId PK
        Enum seatClass
        int totalSeats
        int availableSeats
        Long flightId FK
    }
    FLIGHT ||--o{ SEAT_INVENTORY : stocks

    CLIENT {
        Long clientId PK
        String firstName
        String lastName
        String email
        String phone
        String loyaltyNumber
    }
    CLIENT ||--o{ RESERVATION : makes

    RESERVATION {
        Long reservationId PK
        String reservationCode
        Enum status
        DateTime bookingDate
        Long flightId FK
        Long clientId FK
    }
    FLIGHT ||--o{ RESERVATION : booked_on
    CLIENT ||--o{ RESERVATION : made_by

    PASSENGER {
        Long passengerId PK
        String firstName
        String lastName
        String email
        String passportNumber
        Long reservationId FK
    }
    RESERVATION ||--o{ PASSENGER : for_reservation

    PAYMENT {
        Long paymentId PK
        Decimal amount
        DateTime paymentDate
        Enum status
        Long reservationId FK
        String currencyCode FK
    }
    RESERVATION ||--|| PAYMENT : pays

    CHECK_IN {
        Long checkInId PK
        DateTime checkInTime
        String boardingPassNumber
        String seatNumber
        Enum status
        Long reservationId FK
    }
    RESERVATION ||--|| CHECK_IN : checked_in

    BOARDING {
        Long boardingId PK
        DateTime boardingTime
        String gateNumber
        Enum status
        Long checkInId FK
    }
    CHECK_IN ||--|| BOARDING : boards

    SEATING {
        Long seatingId PK
        String seatNumber
        DateTime assignedAt
        Enum seatClass
        Long passengerId FK
    }
    PASSENGER ||--o{ SEATING : has_seating

    BAGGAGE {
        Long baggageId PK
        Decimal weight
        String tagNumber
        Long passengerId FK
    }
    PASSENGER ||--o{ BAGGAGE : has_baggage

    COUNTRY {
        String code PK
        String name
    }
    CITY {
        Long cityId PK
        String name
        String countryCode FK
    }
    COUNTRY ||--o{ CITY : includes

    AIRPORT {
        String code PK
        String name
        Long cityId FK
    }
    CITY ||--o{ AIRPORT : has
    FLIGHT }|--|| AIRPORT : departs_from
    FLIGHT }|--|| AIRPORT : arrives_at

    ACCOUNTING_ENTRY {
        Long entryId PK
        DateTime entryDate
        Decimal amount
        String description
        Long flightId FK
        String currencyCode FK
    }
    FLIGHT ||--o{ ACCOUNTING_ENTRY : generates

    REVENUE_REPORT {
        Long reportId PK
        Date reportDate
        Decimal totalRevenue
        int totalReservations
    }

    DATA_ANALYSIS_REPORT {
        Long reportId PK
        String reportType
        DateTime generatedAt
        Text content
    }

    NOTIFICATION_LOG {
        Long logId PK
        String eventType
        String recipient
        DateTime sentAt
        Enum status
        Long reservationId FK
    }
    RESERVATION ||--o{ NOTIFICATION_LOG : triggers
